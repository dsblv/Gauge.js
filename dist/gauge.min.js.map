{"version":3,"sources":["gauge.min.js"],"names":["global","factory","module","exports","document","w","Error","window","this","noGlobal","Gauge","element","options","defaults","angle","marks","innerMarks","position","el","handEl","getElementsByClassName","captionsEl","jQuery","$el","attributes","extend","_calculateAngle","_init","prefix","styles","getComputedStyle","documentElement","pre","Array","prototype","slice","call","join","match","OLink","dom","RegExp","lowercase","css","js","toUpperCase","substr","get","key","set","value","obj","i","percentage","length","handAngle","moveHand","style","transform","thegauge","getElementById","console","log"],"mappings":"CAWC,SAAUA,EAAQC,GAEQ,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAE7CD,OAAOC,QAAUH,EAAOI,SACpBH,EAASD,GAAQ,GACjB,SAAUK,GACN,IAAMA,EAAED,SACJ,KAAM,IAAIE,OAAO,6CAErB,OAAOL,GAASI,IAIxBJ,EAASD,IAGG,mBAAXO,QAAyBA,OAASC,KAAM,SAAUD,EAAQE,GA4BnE,QAASC,GAAQC,EAASC,GAGtB,GAAIC,IACAC,MAAc,IACdC,OAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCC,YAAc,EACdC,SAAc,EAIlBT,MAAKU,GAAaP,EAClBH,KAAKW,OAAaR,EAAQS,uBAAuB,gBAAgB,GACjEZ,KAAKa,WAAaV,EAAQS,uBAAuB,oBAAoB,GAEhEb,EAAOe,SACRd,KAAKe,IAAMhB,EAAOe,OAAQd,KAAKU,KAInCV,KAAKgB,WAAaX,EAElBL,KAAKiB,OAAQb,GACRc,kBACAC,QA9CT,GAAIC,GAAS,WACT,GAAIC,GAAStB,EAAOuB,iBAAiB1B,SAAS2B,gBAAiB,IAC3DC,GAAOC,MAAMC,UAAUC,MAClBC,KAAKP,GACLQ,KAAK,IACLC,MAAM,sBAA0C,KAAjBT,EAAOU,QAAiB,GAAI,MAC9D,GACFC,EAAM,kBAAoBF,MAAM,GAAIG,QAAO,IAAMT,EAAM,IAAK,MAAM,EACtE,QACIQ,IAAKA,EACLE,UAAWV,EACXW,IAAK,IAAMX,EAAM,IACjBY,GAAIZ,EAAI,GAAGa,cAAgBb,EAAIc,OAAO,MA+F9C,OAxDApC,GAAMwB,UAAUa,IAAM,SAAWC,GAC7B,MAAOxC,MAAKgB,WAAWwB,IAI3BtC,EAAMwB,UAAUe,IAAM,SAAWD,EAAKE,GAClC,MAAoB,gBAARF,GACDxC,KAAKiB,OAAQuB,IAExBxC,KAAKgB,WAAWwB,GAAOE,EAEV,aAARF,EACMxC,KAAKkB,kBAETlB,OAIXE,EAAMwB,UAAUT,OAAS,SAAW0B,GAChC,GAAIC,GAAI,CAER,IAAoB,gBAARD,GACR,IAAMC,IAAKD,GACP3C,KAAKyC,IAAIG,EAAGD,EAAIC,GAExB,OAAO5C,OAIXE,EAAMwB,UAAUR,gBAAkB,SAAWZ,EAAOG,GAEhD,GAAIH,GAAaA,GAAYN,KAAKuC,IAAI,SAClC9B,EAAaA,GAAYT,KAAKuC,IAAI,YAClCM,EAAapC,GAAYT,KAAKuC,IAAI,SAASO,OAAS,EAGxD,OAFIC,YAAc,IAAMzC,GAAS,EAAIA,EAAQuC,EAEtC7C,KAAKyC,IAAI,YAAaM,WACjBC,YAIhB9C,EAAMwB,UAAUsB,SAAW,SAAW1C,GAClC,GAAIA,GAAQA,GAASN,KAAKuC,IAAI,YAI9B,OAFAvC,MAAKW,OAAOsC,MAAMC,UAAYlD,KAAKW,OAAOsC,MAAM7B,EAAOc,UAAY,aAAe,UAAY5B,EAAQ,OAE/FN,MAIXE,EAAMwB,UAAUP,MAAQjB,EAAMwB,UAAUsB,SAEf,mBAAb/C,KACRF,EAAOG,MAAQA,GAGZA,GAKP,IAAIiD,UAAW,GAAIjD,OAAON,SAASwD,eAAgB,UAAa3C,SAAW,GAE3E4C,SAAQC,IAAKH","file":"gauge.min.js","sourcesContent":["/* !\r\n * Gauge.js\r\n * Cool customizable html gauge\r\n * //github.com/dsblv/Gauge.js\r\n * by Dmitry Sobolev\r\n */\r\n\r\n\r\n\r\n// Common.js-friendly stuff from jQuery\r\n\r\n(function( global, factory ) {\r\n\r\n    if ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\r\n        module.exports = global.document ?\r\n            factory( global, true ) :\r\n            function( w ) {\r\n                if ( !w.document ) {\r\n                    throw new Error( \"Gauge.js requires a window with a document\" );\r\n                }\r\n                return factory( w );\r\n            };\r\n\r\n    } else {\r\n        factory( global );\r\n    }\r\n\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n/*!\r\n * Browswer CSS prefix detection snippet by David Walsh\r\n * http://davidwalsh.name/vendor-prefix\r\n */\r\n\r\nvar prefix = (function () {\r\n    var styles = window.getComputedStyle(document.documentElement, ''),\r\n        pre = (Array.prototype.slice\r\n            .call(styles)\r\n            .join('') \r\n            .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\r\n        )[1],\r\n        dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\r\n    return {\r\n        dom: dom,\r\n        lowercase: pre,\r\n        css: '-' + pre + '-',\r\n        js: pre[0].toUpperCase() + pre.substr(1)\r\n    };\r\n})();\r\n\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {Object} options\r\n * @constructor\r\n */\r\nfunction Gauge ( element, options ) {\r\n\r\n    // default values\r\n    var defaults = {\r\n        angle       : 240,\r\n        marks       : [0, 1, 2, 3, 4, 5, 6],\r\n        innerMarks  : false,\r\n        position    : 0\r\n    }\r\n\r\n    // DOM elements \r\n    this.el         = element;\r\n    this.handEl     = element.getElementsByClassName('gaugejs-hand')[0];\r\n    this.captionsEl = element.getElementsByClassName('gaugejs-captions')[0];\r\n\r\n    if ( window.jQuery )\r\n        this.$el = window.jQuery( this.el );\r\n\r\n\r\n\r\n    this.attributes = defaults;\r\n\r\n    this.extend( options )\r\n        ._calculateAngle()\r\n        ._init();\r\n\r\n}\r\n\r\n// getter method\r\nGauge.prototype.get = function ( key ) {\r\n    return this.attributes[key];\r\n}\r\n\r\n// setter method\r\nGauge.prototype.set = function ( key, value ) {\r\n    if ( typeof key === 'object' )\r\n        return this.extend( key );\r\n\r\n    this.attributes[key] = value;\r\n\r\n    if ( key === 'position' )\r\n        return this._calculateAngle();\r\n\r\n    return this;\r\n}\r\n\r\n// sets multiple values\r\nGauge.prototype.extend = function ( obj ) {\r\n    var i = 0;\r\n\r\n    if ( typeof obj === 'object' )\r\n        for ( i in obj )\r\n            this.set(i, obj[i]);\r\n\r\n    return this;\r\n}\r\n\r\n// calculates actual hand angle\r\nGauge.prototype._calculateAngle = function ( angle, position ) {\r\n\r\n    var angle      = angle    || this.get('angle'),\r\n        position   = position || this.get('position'),\r\n        percentage = position / (this.get('marks').length - 1);\r\n        handAngle  = (360 - angle) / 2 + angle * percentage;\r\n\r\n    return this.set('handAngle', handAngle)\r\n               .moveHand();\r\n}\r\n\r\n// moves the arrow to specific angle\r\nGauge.prototype.moveHand = function ( angle ) {\r\n    var angle = angle || this.get('handAngle');\r\n\r\n    this.handEl.style.transform = this.handEl.style[prefix.lowercase + 'Transform'] = 'rotate(' + angle + 'deg)';\r\n\r\n    return this;\r\n}\r\n\r\n\r\nGauge.prototype._init = Gauge.prototype.moveHand;\r\n\r\nif ( typeof noGlobal === typeof undefined ) {\r\n    window.Gauge = Gauge;\r\n}\r\n\r\nreturn Gauge;\r\n\r\n}));\r\n\r\n\r\nvar thegauge = new Gauge( document.getElementById( 'gauge' ), { position : 4 } );\r\n\r\nconsole.log( thegauge );"],"sourceRoot":"/source/"}