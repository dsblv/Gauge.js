{"version":3,"sources":["gauge.js"],"names":["global","factory","module","exports","document","w","Error","window","this","noGlobal","Gauge","element","options","defaults","points","position","el","jQuery","$el","attributes","_grabCSSSettings","extend","_init","prototype","obj","i","draw","thegauge","getElementById","console","log"],"mappings":"CAWC,SAAUA,EAAQC,GAEQ,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAE7CD,OAAOC,QAAUH,EAAOI,SACpBH,EAASD,GAAQ,GACjB,SAAUK,GACN,IAAMA,EAAED,SACJ,KAAM,IAAIE,OAAO,6CAErB,OAAOL,GAASI,IAIxBJ,EAASD,IAGG,mBAAXO,QAAyBA,OAASC,KAAM,SAAUD,EAAQE,GAQnE,QAASC,GAAQC,EAASC,GAEtB,GAAIC,IACAC,UACAC,SAAoB,EAGxBP,MAAKQ,GAAKL,EAELJ,EAAOU,SACRT,KAAKU,IAAMX,EAAOU,OAAQT,KAAKQ,KAEnCR,KAAKW,WAAaN,EAElBL,KAAKY,mBACAC,OAAQT,GAEbJ,KAAKc,QA+BT,MAvBAZ,GAAMa,UAAUF,OAAS,SAAWG,GAChC,GAAIC,GAAI,CAER,IAAoB,gBAARD,GACR,IAAMC,IAAKD,GACPhB,KAAKW,WAAWM,GAAKD,EAAIC,EAEjC,OAAOjB,OAIXE,EAAMa,UAAUG,KAAO,WAEnB,MAAOlB,OAIXE,EAAMa,UAAUD,MAAQZ,EAAMa,UAAUG,KAEf,mBAAbjB,KACRF,EAAOG,MAAQA,GAGZA,GAKP,IAAIiB,UAAW,GAAIjB,OAAMN,SAASwB,eAAgB,SAElDC,SAAQC,IAAKH","file":"gauge.js","sourcesContent":["/* !\r\n * Gauge.js\r\n * Cool customizable html gauge\r\n * //github.com/dsblv/Gauge.js\r\n * by Dmitry Sobolev\r\n */\r\n\r\n\r\n\r\n// Common.js-friendly stuff from jQuery\r\n\r\n(function( global, factory ) {\r\n\r\n    if ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\r\n        module.exports = global.document ?\r\n            factory( global, true ) :\r\n            function( w ) {\r\n                if ( !w.document ) {\r\n                    throw new Error( \"Gauge.js requires a window with a document\" );\r\n                }\r\n                return factory( w );\r\n            };\r\n\r\n    } else {\r\n        factory( global );\r\n    }\r\n\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {Object} options\r\n * @constructor\r\n */\r\nfunction Gauge ( element, options ) {\r\n\r\n    var defaults = {\r\n        points            : [],\r\n        position          : 0\r\n    }\r\n\r\n    this.el = element;\r\n\r\n    if ( window.jQuery )\r\n        this.$el = window.jQuery( this.el );\r\n\r\n    this.attributes = defaults;\r\n\r\n    this._grabCSSSettings()\r\n        .extend( options );\r\n\r\n    this._init();\r\n}\r\n\r\n\r\n/**\r\n * adds new attributes to a Gauge or changes old ones\r\n * @param {Object} obj - object with new attributes\r\n */\r\nGauge.prototype.extend = function ( obj ) {\r\n    var i = 0;\r\n\r\n    if ( typeof obj === 'object' )\r\n        for ( i in obj )\r\n            this.attributes[i] = obj[i];\r\n\r\n    return this;\r\n}\r\n\r\n// draws a frame on a canvas\r\nGauge.prototype.draw = function () {\r\n\r\n    return this;\r\n}\r\n\r\n\r\nGauge.prototype._init = Gauge.prototype.draw;\r\n\r\nif ( typeof noGlobal === typeof undefined ) {\r\n    window.Gauge = Gauge;\r\n}\r\n\r\nreturn Gauge;\r\n\r\n}));\r\n\r\n\r\nvar thegauge = new Gauge(document.getElementById( 'gauge' ));\r\n\r\nconsole.log( thegauge );"],"sourceRoot":"/source/"}