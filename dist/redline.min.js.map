{"version":3,"sources":["redline.min.js"],"names":["global","factory","module","exports","document","w","Error","window","this","noGlobal","rotate","element","angle","style","transform","prefix","lowercase","Gauge","options","defaults","aperture","marks","innerMarks","position","el","handEl","getElementsByClassName","captionsEl","jQuery","$el","attributes","extend","_calculateAngle","_init","noop","defineBridget","$","addOptionMethod","PluginClass","prototype","option","opts","isPlainObject","bridge","namespace","fn","args","slice","call","arguments","i","len","length","elem","instance","data","isFunction","charAt","returnValue","apply","undefined","logError","each","console","message","error","bridget","Array","define","amd","require","styles","getComputedStyle","documentElement","pre","join","match","OLink","dom","RegExp","css","js","toUpperCase","substr","get","key","set","value","obj","getter","percentage","handAngle","moveHand","render","leftHalf","rightHalf","renderMarks","markList","getElementsByTagName","mark","createElement","innerHTML","span","toString","className","appendChild"],"mappings":"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","file":"redline.min.js","sourcesContent":["/* !\r\n * Gauge.js\r\n * Cool customizable html gauge\r\n * //github.com/dsblv/Gauge.js\r\n * by Dmitry Sobolev\r\n */\r\n\r\n\r\n\r\n// Common.js-friendly stuff from jQuery\r\n\r\n(function( global, factory ) {\r\n\r\n    if ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\r\n        module.exports = global.document ?\r\n            factory( global, true ) :\r\n            function( w ) {\r\n                if ( !w.document ) {\r\n                    throw new Error( \"Gauge.js requires a window with a document\" );\r\n                }\r\n                return factory( w );\r\n            };\r\n\r\n    } else {\r\n        factory( global );\r\n    }\r\n\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n/**\r\n * Bridget makes jQuery widgets\r\n * v1.1.0\r\n * MIT license\r\n */\r\n\r\n( function( window ) {\r\n\r\n'use strict';\r\n\r\n// -------------------------- utils -------------------------- //\r\n\r\nvar slice = Array.prototype.slice;\r\n\r\nfunction noop() {}\r\n\r\n// -------------------------- definition -------------------------- //\r\n\r\nfunction defineBridget( $ ) {\r\n\r\n// bail if no jQuery\r\nif ( !$ ) {\r\n  return;\r\n}\r\n\r\n// -------------------------- addOptionMethod -------------------------- //\r\n\r\n/**\r\n * adds option method -> $().plugin('option', {...})\r\n * @param {Function} PluginClass - constructor class\r\n */\r\nfunction addOptionMethod( PluginClass ) {\r\n  // don't overwrite original option method\r\n  if ( PluginClass.prototype.option ) {\r\n    return;\r\n  }\r\n\r\n  // option setter\r\n  PluginClass.prototype.option = function( opts ) {\r\n    // bail out if not an object\r\n    if ( !$.isPlainObject( opts ) ){\r\n      return;\r\n    }\r\n    this.options = $.extend( true, this.options, opts );\r\n  };\r\n}\r\n\r\n// -------------------------- plugin bridge -------------------------- //\r\n\r\n// helper function for logging errors\r\n// $.error breaks jQuery chaining\r\nvar logError = typeof console === 'undefined' ? noop :\r\n  function( message ) {\r\n    console.error( message );\r\n  };\r\n\r\n/**\r\n * jQuery plugin bridge, access methods like $elem.plugin('method')\r\n * @param {String} namespace - plugin name\r\n * @param {Function} PluginClass - constructor class\r\n */\r\nfunction bridge( namespace, PluginClass ) {\r\n  // add to jQuery fn namespace\r\n  $.fn[ namespace ] = function( options ) {\r\n    if ( typeof options === 'string' ) {\r\n      // call plugin method when first argument is a string\r\n      // get arguments for method\r\n      var args = slice.call( arguments, 1 );\r\n\r\n      for ( var i=0, len = this.length; i < len; i++ ) {\r\n        var elem = this[i];\r\n        var instance = $.data( elem, namespace );\r\n        if ( !instance ) {\r\n          logError( \"cannot call methods on \" + namespace + \" prior to initialization; \" +\r\n            \"attempted to call '\" + options + \"'\" );\r\n          continue;\r\n        }\r\n        if ( !$.isFunction( instance[options] ) || options.charAt(0) === '_' ) {\r\n          logError( \"no such method '\" + options + \"' for \" + namespace + \" instance\" );\r\n          continue;\r\n        }\r\n\r\n        // trigger method with arguments\r\n        var returnValue = instance[ options ].apply( instance, args );\r\n\r\n        // break look and return first value if provided\r\n        if ( returnValue !== undefined ) {\r\n          return returnValue;\r\n        }\r\n      }\r\n      // return this if no return value\r\n      return this;\r\n    } else {\r\n      return this.each( function() {\r\n        var instance = $.data( this, namespace );\r\n        if ( instance ) {\r\n          // apply options & init\r\n          instance.option( options );\r\n          instance._init();\r\n        } else {\r\n          // initialize new instance\r\n          instance = new PluginClass( this, options );\r\n          $.data( this, namespace, instance );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n}\r\n\r\n// -------------------------- bridget -------------------------- //\r\n\r\n/**\r\n * converts a Prototypical class into a proper jQuery plugin\r\n *   the class must have a ._init method\r\n * @param {String} namespace - plugin name, used in $().pluginName\r\n * @param {Function} PluginClass - constructor class\r\n */\r\n$.bridget = function( namespace, PluginClass ) {\r\n  addOptionMethod( PluginClass );\r\n  bridge( namespace, PluginClass );\r\n};\r\n\r\nreturn $.bridget;\r\n\r\n}\r\n\r\n// transport\r\nif ( typeof define === 'function' && define.amd ) {\r\n  // AMD\r\n  define( [ 'jquery' ], defineBridget );\r\n} else if ( typeof exports === 'object' ) {\r\n  defineBridget( require('jquery') );\r\n} else {\r\n  // get jquery from browser global\r\n  defineBridget( window.jQuery );\r\n}\r\n\r\n})( window );\r\n/*!\r\n * Browswer CSS prefix detection snippet by David Walsh\r\n * http://davidwalsh.name/vendor-prefix\r\n */\r\n\r\nvar prefix = (function () {\r\n    var styles = window.getComputedStyle(document.documentElement, ''),\r\n        pre = (Array.prototype.slice\r\n            .call(styles)\r\n            .join('') \r\n            .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\r\n        )[1],\r\n        dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\r\n    return {\r\n        dom: dom,\r\n        lowercase: pre,\r\n        css: '-' + pre + '-',\r\n        js: pre[0].toUpperCase() + pre.substr(1)\r\n    };\r\n})();\r\n\r\n\r\nfunction rotate( element, angle ) {\r\n    element.style.transform =\r\n    element.style[prefix.lowercase + 'Transform'] = 'rotate(' + angle + 'deg)';\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} element\r\n * @param {Object} options\r\n * @constructor\r\n */\r\nfunction Gauge ( element, options ) {\r\n\r\n    // default values\r\n    var defaults = {\r\n        aperture    : 180,\r\n        marks       : [0, 1, 2, 3, 4, 5, 6],\r\n        innerMarks  : true,\r\n        position    : 0\r\n    }\r\n\r\n    // DOM elements \r\n    this.el         = element;\r\n    this.handEl     = element.getElementsByClassName('gaugejs-hand-wrap')[0];\r\n    this.captionsEl = element.getElementsByClassName('gaugejs-captions')[0];\r\n\r\n    if ( window.jQuery )\r\n        this.$el = window.jQuery( this.el );\r\n\r\n    this.attributes = defaults;\r\n\r\n    this.extend( options )\r\n        ._calculateAngle()\r\n        ._init();\r\n\r\n}\r\n\r\n// getter method\r\nGauge.prototype.get = function ( key ) {\r\n    return this.attributes[key];\r\n}\r\n\r\n// setter method\r\nGauge.prototype.set = function ( key, value ) {\r\n    if ( typeof key === 'object' )\r\n        return this.extend( key );\r\n\r\n    this.attributes[key] = value;\r\n\r\n    if ( key === 'position' )\r\n        return this._calculateAngle();\r\n\r\n    return this;\r\n}\r\n\r\n// sets multiple values\r\nGauge.prototype.extend = function ( obj ) {\r\n    var i = 0;\r\n\r\n    if ( typeof obj === 'object' )\r\n        for ( i in obj )\r\n            this.set(i, obj[i]);\r\n\r\n    return this;\r\n}\r\n\r\n// calculates actual hand angle\r\nGauge.prototype._calculateAngle = function ( angle, position, getter ) {\r\n\r\n    var angle      = angle    || this.get('aperture'),\r\n        position   = position || this.get('position'),\r\n        percentage = position / (this.get('marks').length - 1);\r\n        handAngle  = (360 - angle) / 2 + angle * percentage;\r\n\r\n    if ( getter )\r\n        return handAngle;\r\n\r\n    return this.set('handAngle', handAngle)\r\n               .moveHand();\r\n}\r\n\r\n// moves the arrow to specific angle\r\nGauge.prototype.moveHand = function ( angle ) {\r\n    var angle = angle || this.get('handAngle');\r\n\r\n    rotate( this.handEl, angle );\r\n\r\n    return this;\r\n}\r\n\r\n\r\nGauge.prototype.render = function () {\r\n    var angle       = (360 - this.get('aperture'))/2 - 90,\r\n        leftHalf    = this.el.getElementsByClassName('gaugejs-dial-left-wrap')[0],\r\n        rightHalf   = this.el.getElementsByClassName('gaugejs-dial-right-wrap')[0];\r\n\r\n    rotate( leftHalf, angle );\r\n    rotate( rightHalf, -angle );\r\n\r\n    return this.renderMarks();\r\n}\r\n\r\n// drops custom marks on a gauge\r\nGauge.prototype.renderMarks = function () {\r\n    var marks = this.get( 'marks' ),\r\n        markList = this.captionsEl\r\n                       .getElementsByTagName( 'ul' )[0];\r\n\r\n    for ( var i in marks ) {\r\n        /* every mark should be placed and rotated the right way */\r\n        var mark  = window.document.createElement( 'li' ),\r\n            angle = this._calculateAngle(null, i, true);\r\n\r\n        mark.innerHTML = '<span><b>' + marks[i] + '</b></span>';\r\n        rotate( mark, angle );\r\n        \r\n        var span = mark.getElementsByTagName( 'span' )[0];\r\n        rotate( span, -angle );\r\n\r\n\r\n        /* nice alignment for long captions */\r\n        if ( marks[i].toString().length > 1 ) {\r\n            if ( i < marks.length / 2 )\r\n                mark.className = 'gaugejs-caption-left-fit';\r\n            else\r\n                mark.className = 'gaugejs-caption-right-fit';\r\n        }\r\n\r\n        /* ready to go */\r\n        markList.appendChild(mark);\r\n    }\r\n\r\n    /* move marks inside if required */\r\n    if ( this.get('innerMarks') )\r\n        this.captionsEl.className += ' gaugejs-captions-inner';\r\n\r\n    return this.moveHand();\r\n}\r\n\r\nGauge.prototype._init = Gauge.prototype.render;\r\n\r\nif ( typeof noGlobal === typeof undefined ) {\r\n    window.Gauge = Gauge;\r\n}\r\n\r\nif ( window.jQuery && window.jQuery.bridget ) {\r\n    jQuery.bridget( 'gauge', Gauge );\r\n}\r\n\r\nreturn Gauge;\r\n\r\n}));"],"sourceRoot":"/source/"}