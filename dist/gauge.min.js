!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("Gauge.js requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function n(e,n){var o={angle:240,marks:[0,1,2,3,4,5,6],innerMarks:!1,position:0};this.el=e,this.handEl=e.getElementsByClassName("gaugejs-hand")[0],this.captionsEl=e.getElementsByClassName("gaugejs-captions")[0],t.jQuery&&(this.$el=t.jQuery(this.el)),this.attributes=o,this.extend(n)._calculateAngle()._init()}var o=function(){var e=t.getComputedStyle(document.documentElement,""),n=(Array.prototype.slice.call(e).join("").match(/-(moz|webkit|ms)-/)||""===e.OLink&&["","o"])[1],o="WebKit|Moz|MS|O".match(new RegExp("("+n+")","i"))[1];return{dom:o,lowercase:n,css:"-"+n+"-",js:n[0].toUpperCase()+n.substr(1)}}();return n.prototype.get=function(t){return this.attributes[t]},n.prototype.set=function(t,e){return"object"==typeof t?this.extend(t):(this.attributes[t]=e,"position"===t?this._calculateAngle():this)},n.prototype.extend=function(t){var e=0;if("object"==typeof t)for(e in t)this.set(e,t[e]);return this},n.prototype._calculateAngle=function(t,e){var t=t||this.get("angle"),e=e||this.get("position"),n=e/(this.get("marks").length-1);return handAngle=(360-t)/2+t*n,this.set("handAngle",handAngle).moveHand()},n.prototype.moveHand=function(t){var t=t||this.get("handAngle");return this.handEl.style.transform=this.handEl.style[o.lowercase+"Transform"]="rotate("+t+"deg)",this},n.prototype._init=n.prototype.moveHand,"undefined"==typeof e&&(t.Gauge=n),n});var thegauge=new Gauge(document.getElementById("gauge"),{position:4});console.log(thegauge);
//# sourceMappingURL=gauge.min.js.map